{"version":3,"file":"index.esm.mjs","sources":["../src/index.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * @fileoverview A simple toast notification library for any JavaScript framework.\r\n * @name Toast Notifications\r\n * @author Priyanshu Patel\r\n * @version 1.0.0\r\n * @license MIT\r\n * @depends None\r\n * @description This library provides a simple way to create toast notifications.\r\n * Author: Priyanshu Patel\r\n * Email: priyanshu.alt191@gmail.com\r\n * Created: July 31, 2024\r\n * Description: A simple toast notification library for any JavaScript framework.\r\n * Version: 1.0.0\r\n * License: MIT\r\n * Dependencies: None\r\n */\r\n\r\n/**\r\n * Creates a toast notification.\r\n *\r\n * @param {Object} options - Options for the toast notification.\r\n * @param {string} [options.message] - The message to display in the toast. Defaults based on type if not provided.\r\n * @param {number} [options.duration=3000] - The duration the toast should be displayed, in milliseconds.\r\n * @param {string} [options.position='bottom-right'] - The position of the toast on the screen.\r\n * @param {string} [options.type='info'] - The type of the toast ('info', 'success', 'error', 'warning').\r\n * @param {string} [options.backgroundColor] - Custom background color for the toast notification.\r\n * @param {string} [options.textColor='white'] - Custom text color for the toast notification.\r\n * @param {string} [options.animationDuration='0.5s'] - Duration of the fade-in and fade-out animations.\r\n * @param {string} [options.animationEasing='ease'] - Easing function for the animations.\r\n * @param {boolean} [options.showCloseButton=false] - Whether to show a close button.\r\n * @return {void}\r\n */\r\n\r\n/** ########################################### Defaults ############################################ */\r\n\r\nlet defaultColors = {\r\n  info: \"blue\",\r\n  success: \"green\",\r\n  error: \"red\",\r\n  warning: \"darkorange\",\r\n};\r\n\r\nlet defaultMessages = {\r\n  info: \"This is an info message.\",\r\n  success: \"Action completed successfully!\",\r\n  error: \"An error occurred!\",\r\n  warning: \"This is a warning message!\",\r\n};\r\n\r\n// Flag to manage if a toast is currently being shown\r\nlet isToastShowing = false;\r\n\r\nfunction showToast({ message, duration, position, type, backgroundColor, textColor, showCloseButton, animationDuration, animationEasing }) {\r\n  if (isToastShowing) return;\r\n\r\n  isToastShowing = true;\r\n\r\n  const finalMessage = message || defaultMessages[type] || \"This is a default message.\";\r\n  const toastBackgroundColor = backgroundColor || defaultColors[type] || \"gray\";\r\n  const toastTextColor = textColor || (toastBackgroundColor === \"white\" ? \"black\" : \"white\");\r\n\r\n  let toastContainer = document.getElementById(`toast-container-${position}`);\r\n  if (!toastContainer) {\r\n    toastContainer = document.createElement(\"div\");\r\n    toastContainer.id = `toast-container-${position}`;\r\n    toastContainer.style.position = \"fixed\";\r\n    toastContainer.style.zIndex = \"9999\";\r\n\r\n    // Positioning logic\r\n    if (position.includes(\"bottom\")) {\r\n      toastContainer.style.bottom = \"10px\";\r\n    } else if (position.includes(\"top\")) {\r\n      toastContainer.style.top = \"10px\";\r\n    }\r\n\r\n    if (position.includes(\"right\")) {\r\n      toastContainer.style.right = \"10px\";\r\n    } else if (position.includes(\"left\")) {\r\n      toastContainer.style.left = \"10px\";\r\n    } else if (position.includes(\"center\")) {\r\n      toastContainer.style.top = \"50%\";\r\n      toastContainer.style.left = \"50%\";\r\n      toastContainer.style.transform = \"translate(-50%, -50%)\";\r\n    }\r\n\r\n    document.body.appendChild(toastContainer);\r\n  }\r\n\r\n  const toast = document.createElement(\"div\");\r\n  toast.textContent = finalMessage;\r\n  toast.style.background = toastBackgroundColor;\r\n  toast.style.color = toastTextColor;\r\n  toast.style.padding = \"10px 20px\";\r\n  toast.style.marginTop = \"10px\";\r\n  toast.style.borderRadius = \"5px\";\r\n  toast.style.boxShadow = \"0 0 10px rgba(0, 0, 0, 0.1)\";\r\n  toast.style.opacity = \"0\";\r\n  toast.style.transition = `opacity ${animationDuration || '0.5s'} ${animationEasing || 'ease'}`;\r\n\r\n  // Close button\r\n  if (showCloseButton) {\r\n    const closeButton = document.createElement(\"button\");\r\n    closeButton.textContent = \"Ã—\";\r\n    closeButton.style.marginLeft = \"10px\";\r\n    closeButton.style.background = \"transparent\";\r\n    closeButton.style.border = \"none\";\r\n    closeButton.style.color = toastTextColor;\r\n    closeButton.style.cursor = \"pointer\";\r\n\r\n    closeButton.onclick = () => {\r\n      toast.style.opacity = \"0\"; // Start fade out\r\n      toast.addEventListener(\"transitionend\", () => {\r\n        toast.remove();\r\n        isToastShowing = false; // Reset the flag when the toast is removed\r\n      });\r\n    };\r\n\r\n    toast.appendChild(closeButton);\r\n  }\r\n\r\n  toastContainer.appendChild(toast);\r\n\r\n  requestAnimationFrame(() => {\r\n    toast.style.opacity = \"1\"; // Fade in effect\r\n  });\r\n\r\n  setTimeout(() => {\r\n    if (toast.parentNode) {\r\n      toast.style.opacity = \"0\"; // Fade out effect\r\n      toast.addEventListener(\"transitionend\", () => {\r\n        toast.remove();\r\n        isToastShowing = false; // Reset the flag when the toast is removed\r\n      });\r\n    }\r\n  }, duration || 3000);\r\n}\r\n\r\n/**\r\n * Create a toast notification with the provided options.\r\n * \r\n * @param {Object} options - Options for the toast notification.\r\n * @param {string} [options.message] - The message to display in the toast.\r\n * @param {number} [options.duration=3000] - The duration of the toast in milliseconds.\r\n * @param {string} [options.position='bottom-right'] - The position of the toast.\r\n * @param {string} [options.type='info'] - The type of the toast.\r\n * @param {string} [options.backgroundColor] - The custom background color.\r\n * @param {string} [options.textColor='white'] - The custom text color.\r\n * @param {boolean} [options.showCloseButton=false] - Whether to show a close button.\r\n * @param {string} [options.animationDuration='0.5s'] - Duration of animations.\r\n * @param {string} [options.animationEasing='ease'] - Easing function for animations.\r\n * @return {void}\r\n */\r\nfunction createToast(options) {\r\n  // Validate options\r\n  if (typeof options !== 'object') {\r\n    console.error(\"Options should be an object.\");\r\n    return;\r\n  }\r\n\r\n  const {\r\n    message,\r\n    duration,\r\n    position = \"bottom-right\",\r\n    type = \"info\",\r\n    backgroundColor,\r\n    textColor,\r\n    showCloseButton = false,\r\n    animationDuration,\r\n    animationEasing,\r\n  } = options;\r\n\r\n  // Validate duration\r\n  if (duration && typeof duration !== 'number') {\r\n    console.warn(\"Duration should be a number. Falling back to default value.\");\r\n  }\r\n\r\n  showToast({ message, duration: duration || 3000, position, type, backgroundColor, textColor, showCloseButton, animationDuration, animationEasing });\r\n}\r\n\r\n/**\r\n * Set default colors for toast types.\r\n * \r\n * @param {Object} newColors - New colors to set for toast types.\r\n * @return {void}\r\n */\r\nfunction setDefaultColors(newColors) {\r\n  // Validate newColors\r\n  if (typeof newColors !== 'object') {\r\n    console.error(\"New colors should be an object.\");\r\n    return;\r\n  }\r\n  \r\n  Object.assign(defaultColors, newColors);\r\n}\r\n\r\n/**\r\n * Set default messages for toast types.\r\n * \r\n * @param {Object} newMessages - New messages to set for toast types.\r\n * @return {void}\r\n */\r\nfunction setDefaultMessages(newMessages) {\r\n  // Validate newMessages\r\n  if (typeof newMessages !== 'object') {\r\n    console.error(\"New messages should be an object.\");\r\n    return;\r\n  }\r\n\r\n  Object.assign(defaultMessages, newMessages);\r\n}\r\n\r\nexport { createToast, setDefaultColors, setDefaultMessages };\r\n"],"names":["defaultColors","info","success","error","warning","defaultMessages","isToastShowing","createToast","options","message","duration","position","type","backgroundColor","textColor","showCloseButton","animationDuration","animationEasing","finalMessage","toastBackgroundColor","toastTextColor","toastContainer","document","getElementById","createElement","id","style","zIndex","includes","bottom","top","right","left","transform","body","appendChild","toast","textContent","background","color","padding","marginTop","borderRadius","boxShadow","opacity","transition","closeButton","marginLeft","border","cursor","onclick","addEventListener","remove","requestAnimationFrame","setTimeout","parentNode","showToast","setDefaultColors","newColors","Object","assign","setDefaultMessages","newMessages"],"mappings":";;;;;;;;;;;;;;;;AAqCA,IAAIA,EAAgB,CAClBC,KAAM,OACNC,QAAS,QACTC,MAAO,MACPC,QAAS,cAGPC,EAAkB,CACpBJ,KAAM,2BACNC,QAAS,iCACTC,MAAO,qBACPC,QAAS,8BAIPE,GAAiB,EAsGrB,SAASC,EAAYC,GAEnB,GAAuB,iBAAZA,EAET,OAGF,MAAMC,QACJA,EAAOC,SACPA,EAAQC,SACRA,EAAW,eAAcC,KACzBA,EAAO,OAAMC,gBACbA,EAAeC,UACfA,EAASC,gBACTA,GAAkB,EAAKC,kBACvBA,EAAiBC,gBACjBA,GACET,GArHN,UAAmBC,QAAEA,EAAOC,SAAEA,EAAQC,SAAEA,EAAQC,KAAEA,EAAIC,gBAAEA,EAAeC,UAAEA,EAASC,gBAAEA,EAAeC,kBAAEA,EAAiBC,gBAAEA,IACtH,GAAIX,EAAgB,OAEpBA,GAAiB,EAEjB,MAAMY,EAAeT,GAAWJ,EAAgBO,IAAS,6BACnDO,EAAuBN,GAAmBb,EAAcY,IAAS,OACjEQ,EAAiBN,IAAuC,UAAzBK,EAAmC,QAAU,SAElF,IAAIE,EAAiBC,SAASC,eAAe,mBAAmBZ,KAC3DU,IACHA,EAAiBC,SAASE,cAAc,OACxCH,EAAeI,GAAK,mBAAmBd,IACvCU,EAAeK,MAAMf,SAAW,QAChCU,EAAeK,MAAMC,OAAS,OAG1BhB,EAASiB,SAAS,UACpBP,EAAeK,MAAMG,OAAS,OACrBlB,EAASiB,SAAS,SAC3BP,EAAeK,MAAMI,IAAM,QAGzBnB,EAASiB,SAAS,SACpBP,EAAeK,MAAMK,MAAQ,OACpBpB,EAASiB,SAAS,QAC3BP,EAAeK,MAAMM,KAAO,OACnBrB,EAASiB,SAAS,YAC3BP,EAAeK,MAAMI,IAAM,MAC3BT,EAAeK,MAAMM,KAAO,MAC5BX,EAAeK,MAAMO,UAAY,yBAGnCX,SAASY,KAAKC,YAAYd,IAG5B,MAAMe,EAAQd,SAASE,cAAc,OAYrC,GAXAY,EAAMC,YAAcnB,EACpBkB,EAAMV,MAAMY,WAAanB,EACzBiB,EAAMV,MAAMa,MAAQnB,EACpBgB,EAAMV,MAAMc,QAAU,YACtBJ,EAAMV,MAAMe,UAAY,OACxBL,EAAMV,MAAMgB,aAAe,MAC3BN,EAAMV,MAAMiB,UAAY,8BACxBP,EAAMV,MAAMkB,QAAU,IACtBR,EAAMV,MAAMmB,WAAa,WAAW7B,GAAqB,UAAUC,GAAmB,SAGlFF,EAAiB,CACnB,MAAM+B,EAAcxB,SAASE,cAAc,UAC3CsB,EAAYT,YAAc,IAC1BS,EAAYpB,MAAMqB,WAAa,OAC/BD,EAAYpB,MAAMY,WAAa,cAC/BQ,EAAYpB,MAAMsB,OAAS,OAC3BF,EAAYpB,MAAMa,MAAQnB,EAC1B0B,EAAYpB,MAAMuB,OAAS,UAE3BH,EAAYI,QAAU,KACpBd,EAAMV,MAAMkB,QAAU,IACtBR,EAAMe,iBAAiB,iBAAiB,KACtCf,EAAMgB,SACN9C,GAAiB,CAAK,GACtB,EAGJ8B,EAAMD,YAAYW,EACnB,CAEDzB,EAAec,YAAYC,GAE3BiB,uBAAsB,KACpBjB,EAAMV,MAAMkB,QAAU,GAAG,IAG3BU,YAAW,KACLlB,EAAMmB,aACRnB,EAAMV,MAAMkB,QAAU,IACtBR,EAAMe,iBAAiB,iBAAiB,KACtCf,EAAMgB,SACN9C,GAAiB,CAAK,IAEzB,GACAI,GAAY,IACjB,CAyCE8C,CAAU,CAAE/C,UAASC,SAAUA,GAAY,IAAMC,WAAUC,OAAMC,kBAAiBC,YAAWC,kBAAiBC,oBAAmBC,mBACnI,CAQA,SAASwC,EAAiBC,GAEC,iBAAdA,GAKXC,OAAOC,OAAO5D,EAAe0D,EAC/B,CAQA,SAASG,EAAmBC,GAEC,iBAAhBA,GAKXH,OAAOC,OAAOvD,EAAiByD,EACjC"}