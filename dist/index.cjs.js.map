{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * @fileoverview A simple toast notification library for any JavaScript framework.\r\n * @name Toast Notifications\r\n * @author Priyanshu Patel\r\n * @version 1.0.0\r\n * @license MIT\r\n * @depends None\r\n * @description This library provides a simple way to create toast notifications.\r\n * Author: Priyanshu Patel\r\n * Email: priyanshu.alt191@gmail.com\r\n * Created: July 31, 2024\r\n * Description: A simple toast notification library for any JavaScript framework.\r\n * Version: 1.0.0\r\n * License: MIT\r\n * Dependencies: None\r\n */\r\n\r\n/**\r\n * Creates a toast notification.\r\n *\r\n * @param {Object} options - Options for the toast notification.\r\n * @param {string} [options.message] - The message to display in the toast. Defaults based on type if not provided.\r\n * @param {number} [options.duration=3000] - The duration the toast should be displayed, in milliseconds.\r\n * @param {string} [options.position='bottom-right'] - The position of the toast on the screen.\r\n * @param {string} [options.type='info'] - The type of the toast ('info', 'success', 'error', 'warning').\r\n * @param {string} [options.backgroundColor] - Custom background color for the toast notification.\r\n * @param {string} [options.textColor='white'] - Custom text color for the toast notification.\r\n * @param {string} [options.animationDuration='0.5s'] - Duration of the fade-in and fade-out animations.\r\n * @param {string} [options.animationEasing='ease'] - Easing function for the animations.\r\n * @param {boolean} [options.showCloseButton=false] - Whether to show a close button.\r\n * @return {void}\r\n */\r\n\r\n/** ########################################### Defaults ############################################ */\r\n\r\nlet defaultColors = {\r\n    info: \"blue\",\r\n    success: \"green\",\r\n    error: \"red\",\r\n    warning: \"darkorange\",\r\n};\r\n\r\nlet defaultMessages = {\r\n    info: \"This is an info message.\",\r\n    success: \"Action completed successfully!\",\r\n    error: \"An error occurred!\",\r\n    warning: \"This is a warning message!\",\r\n};\r\n\r\n// Flag to manage if a toast is currently being shown\r\nlet isToastShowing = false;\r\n\r\nfunction createToastContainer(position) {\r\n    let toastContainer = document.getElementById(`toast-container-${position}`);\r\n    if (!toastContainer) {\r\n        toastContainer = document.createElement(\"div\");\r\n        toastContainer.id = `toast-container-${position}`;\r\n        toastContainer.style.position = \"fixed\";\r\n        toastContainer.style.zIndex = \"9999\";\r\n        setPosition(toastContainer, position);\r\n        document.body.appendChild(toastContainer);\r\n    }\r\n    return toastContainer;\r\n}\r\n\r\nfunction setPosition(container, position) {\r\n    if (position.includes(\"bottom\")) {\r\n        container.style.bottom = \"10px\";\r\n    } else if (position.includes(\"top\")) {\r\n        container.style.top = \"10px\";\r\n    }\r\n\r\n    if (position.includes(\"right\")) {\r\n        container.style.right = \"10px\";\r\n    } else if (position.includes(\"left\")) {\r\n        container.style.left = \"10px\";\r\n    } else if (position.includes(\"center\")) {\r\n        container.style.top = \"50%\";\r\n        container.style.left = \"50%\";\r\n        container.style.transform = \"translate(-50%, -50%)\";\r\n    }\r\n}\r\n\r\nfunction createToastElement(finalMessage, backgroundColor, textColor, animationDuration, animationEasing, showCloseButton) {\r\n    const toast = document.createElement(\"div\");\r\n    toast.textContent = finalMessage;\r\n    toast.style.background = backgroundColor;\r\n    toast.style.color = textColor;\r\n    toast.style.padding = \"10px 20px\";\r\n    toast.style.marginTop = \"10px\";\r\n    toast.style.borderRadius = \"5px\";\r\n    toast.style.boxShadow = \"0 0 10px rgba(0, 0, 0, 0.1)\";\r\n    toast.style.opacity = \"0\";\r\n    toast.style.transition = `opacity ${animationDuration} ${animationEasing}`;\r\n\r\n    if (showCloseButton) {\r\n        addCloseButton(toast, textColor);\r\n    }\r\n\r\n    return toast;\r\n}\r\n\r\nfunction addCloseButton(toast, textColor) {\r\n    const closeButton = document.createElement(\"button\");\r\n    closeButton.textContent = \"Ã—\";\r\n    closeButton.style.marginLeft = \"10px\";\r\n    closeButton.style.background = \"transparent\";\r\n    closeButton.style.border = \"none\";\r\n    closeButton.style.color = textColor;\r\n    closeButton.style.cursor = \"pointer\";\r\n\r\n    closeButton.onclick = () => {\r\n        toast.style.opacity = \"0\"; // Start fade out\r\n        toast.addEventListener(\"transitionend\", () => {\r\n            toast.remove();\r\n            isToastShowing = false; // Reset the flag when the toast is removed\r\n        });\r\n    };\r\n\r\n    toast.appendChild(closeButton);\r\n}\r\n\r\nfunction showToast({ message, duration, position, type, backgroundColor, textColor, showCloseButton, animationDuration, animationEasing }) {\r\n    if (isToastShowing) return;\r\n\r\n    isToastShowing = true;\r\n\r\n    const finalMessage = message || defaultMessages[type] || \"This is a default message.\";\r\n    const toastBackgroundColor = backgroundColor || defaultColors[type] || \"gray\";\r\n    const toastTextColor = textColor || (toastBackgroundColor === \"white\" ? \"black\" : \"white\");\r\n\r\n    const toastContainer = createToastContainer(position);\r\n    const toast = createToastElement(finalMessage, toastBackgroundColor, toastTextColor, animationDuration || '0.5s', animationEasing || 'ease', showCloseButton);\r\n\r\n    toastContainer.appendChild(toast);\r\n    requestAnimationFrame(() => {\r\n        toast.style.opacity = \"1\"; // Fade in effect\r\n    });\r\n\r\n    setTimeout(() => {\r\n        if (toast.parentNode) {\r\n            toast.style.opacity = \"0\"; // Fade out effect\r\n            toast.addEventListener(\"transitionend\", () => {\r\n                toast.remove();\r\n                isToastShowing = false; // Reset the flag when the toast is removed\r\n            });\r\n        }\r\n    }, duration || 3000);\r\n}\r\n\r\n/**\r\n * Create a toast notification with the provided options.\r\n * \r\n * @param {Object} options - Options for the toast notification.\r\n * @param {string} [options.message] - The message to display in the toast.\r\n * @param {number} [options.duration=3000] - The duration of the toast in milliseconds.\r\n * @param {string} [options.position='bottom-right'] - The position of the toast.\r\n * @param {string} [options.type='info'] - The type of the toast.\r\n * @param {string} [options.backgroundColor] - The custom background color.\r\n * @param {string} [options.textColor='white'] - The custom text color.\r\n * @param {boolean} [options.showCloseButton=false] - Whether to show a close button.\r\n * @param {string} [options.animationDuration='0.5s'] - Duration of animations.\r\n * @param {string} [options.animationEasing='ease'] - Easing function for animations.\r\n * @return {void}\r\n */\r\nfunction createToast(options) {\r\n    // Validate options\r\n    if (typeof options !== 'object') {\r\n        console.error(\"Options should be an object.\");\r\n        return;\r\n    }\r\n\r\n    const {\r\n        message,\r\n        duration,\r\n        position = \"bottom-right\",\r\n        type = \"info\",\r\n        backgroundColor,\r\n        textColor,\r\n        showCloseButton = false,\r\n        animationDuration,\r\n        animationEasing,\r\n    } = options;\r\n\r\n    // Validate duration\r\n    if (duration && typeof duration !== 'number') {\r\n        console.warn(\"Duration should be a number. Falling back to default value.\");\r\n    }\r\n\r\n    showToast({ message, duration: duration || 3000, position, type, backgroundColor, textColor, showCloseButton, animationDuration, animationEasing });\r\n}\r\n\r\n/**\r\n * Set default colors for toast types.\r\n * \r\n * @param {Object} newColors - New colors to set for toast types.\r\n * @return {void}\r\n */\r\nfunction setDefaultColors(newColors) {\r\n    // Validate newColors\r\n    if (typeof newColors !== 'object') {\r\n        console.error(\"New colors should be an object.\");\r\n        return;\r\n    }\r\n    \r\n    Object.assign(defaultColors, newColors);\r\n}\r\n\r\n/**\r\n * Set default messages for toast types.\r\n * \r\n * @param {Object} newMessages - New messages to set for toast types.\r\n * @return {void}\r\n */\r\nfunction setDefaultMessages(newMessages) {\r\n    // Validate newMessages\r\n    if (typeof newMessages !== 'object') {\r\n        console.error(\"New messages should be an object.\");\r\n        return;\r\n    }\r\n\r\n    Object.assign(defaultMessages, newMessages);\r\n}\r\n\r\nexport { createToast, setDefaultColors, setDefaultMessages };\r\n"],"names":["defaultColors","info","success","error","warning","defaultMessages","isToastShowing","createToastElement","finalMessage","backgroundColor","textColor","animationDuration","animationEasing","showCloseButton","toast","document","createElement","textContent","style","background","color","padding","marginTop","borderRadius","boxShadow","opacity","transition","closeButton","marginLeft","border","cursor","onclick","addEventListener","remove","appendChild","addCloseButton","showToast","message","duration","position","type","toastBackgroundColor","toastTextColor","toastContainer","getElementById","id","zIndex","container","includes","bottom","top","right","left","transform","setPosition","body","createToastContainer","requestAnimationFrame","setTimeout","parentNode","options","newColors","Object","assign","newMessages"],"mappings":"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"}